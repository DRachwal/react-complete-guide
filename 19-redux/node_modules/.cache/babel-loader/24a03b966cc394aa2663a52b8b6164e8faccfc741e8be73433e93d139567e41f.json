{"ast":null,"code":"// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\n\n// const counterReducer = (state = initialState, action) => {\n//   console.log('counterReducer state', state);\n\n//   if (action.type === 'INCREMENT')\n//     return {\n//       ...state,\n//       counter: state.counter + 1\n//     }\n\n//   if (action.type === 'DECREMENT')\n//     return {\n//       ...state,\n//       counter: state.counter - 1\n//     }\n\n//   if (action.type === 'INCREASE')\n//     return {\n//       ...state,\n//       counter: state.counter + action.payload\n//     }\n\n//   if (action.type === 'TOGGLE_COUNTER')\n//     return {\n//       ...state,\n//       showCounter: !state.showCounter\n//     }\n\n//   return state;\n// };\n\n// const store = createStore(counterReducer);\n\n// export default store;\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer\n  }\n});\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","store","reducer"],"sources":["/Users/damian.rachwal/Documents/code/react-complete-guide/19-redux/src/store/index.js"],"sourcesContent":["// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\n\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\n\n// const counterReducer = (state = initialState, action) => {\n//   console.log('counterReducer state', state);\n\n//   if (action.type === 'INCREMENT')\n//     return {\n//       ...state,\n//       counter: state.counter + 1\n//     }\n\n//   if (action.type === 'DECREMENT')\n//     return {\n//       ...state,\n//       counter: state.counter - 1\n//     }\n\n//   if (action.type === 'INCREASE')\n//     return {\n//       ...state,\n//       counter: state.counter + action.payload\n//     }\n\n//   if (action.type === 'TOGGLE_COUNTER')\n//     return {\n//       ...state,\n//       showCounter: !state.showCounter\n//     }\n\n//   return state;\n// };\n\n// const store = createStore(counterReducer);\n\n// export default store;\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer\n  }\n});\n\nexport default store;"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,CAAC;EACVC,WAAW,EAAE;AACf,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,MAAMW,KAAK,GAAGd,cAAc,CAAC;EAC3Be,OAAO,EAAE;IACPb,OAAO,EAAEE,YAAY,CAACW;EACxB;AACF,CAAC,CAAC;AAEF,eAAeD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}