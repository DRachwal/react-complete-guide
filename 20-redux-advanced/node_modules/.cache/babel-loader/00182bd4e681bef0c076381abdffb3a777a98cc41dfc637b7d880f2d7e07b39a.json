{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui\";\nconst slice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    quantity: 0\n  },\n  reducers: {\n    addToCart(state, {\n      payload\n    }) {\n      const existingCartItem = state.items.find(item => item.id === payload.id);\n      if (existingCartItem) {\n        existingCartItem.quantity++;\n        existingCartItem.total += existingCartItem.price;\n      } else {\n        state.items.push({\n          ...payload,\n          total: payload.price,\n          quantity: 1\n        });\n      }\n      state.quantity++;\n    },\n    removeFromCart(state, {\n      payload\n    }) {\n      const existingCartItem = state.items.find(item => item.id === payload);\n      if (existingCartItem.quantity > 1) {\n        existingCartItem.quantity--;\n        existingCartItem.total -= existingCartItem.price;\n      } else state.items = state.items.filter(item => item.id !== payload);\n      state.quantity--;\n    }\n  }\n});\nconst sendCartData = cart => async dispatch => {\n  dispatch(uiActions.showNotification({\n    status: 'pending',\n    title: 'Sending...',\n    message: 'Sending cart data'\n  }));\n  try {\n    const response = await fetch('https://react-redux-22c17-default-rtdb.firebaseio.com/cart.json', {\n      method: 'PUT',\n      body: JSON.stringify(cart)\n    });\n    if (!response.ok) {\n      throw new Error('Sending cart data failed');\n    }\n    dispatch(uiActions.showNotification({\n      status: 'success',\n      title: 'Success',\n      message: 'Cart data has been sent'\n    }));\n  } catch (error) {\n    uiActions.showNotification({\n      status: 'error',\n      title: 'Error',\n      message: 'Sending cart data failed'\n    });\n  }\n};\nexport const cartActions = slice.actions;\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","uiActions","slice","name","initialState","items","quantity","reducers","addToCart","state","payload","existingCartItem","find","item","id","total","price","push","removeFromCart","filter","sendCartData","cart","dispatch","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions","reducer"],"sources":["/Users/damian.rachwal/Documents/code/react-complete-guide/20-redux-advanced/src/store/cart.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui\";\n\nconst slice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    quantity: 0\n  },\n  reducers: {\n    addToCart(state, { payload }) {\n      const existingCartItem = state.items.find(item => item.id === payload.id);\n\n      if (existingCartItem) {\n        existingCartItem.quantity++;\n        existingCartItem.total += existingCartItem.price;\n      } else {\n        state.items.push({\n          ...payload,\n          total: payload.price,\n          quantity: 1\n        })\n      }\n\n      state.quantity++;\n    },\n    removeFromCart(state, { payload }) {\n      const existingCartItem = state.items.find(item => item.id === payload);\n\n      if (existingCartItem.quantity > 1) {\n        existingCartItem.quantity--;\n        existingCartItem.total -= existingCartItem.price;\n      } else\n        state.items = state.items.filter(item => item.id !== payload)\n\n      state.quantity--;\n\n    }\n  }\n})\n\nconst sendCartData = (cart) => async (dispatch) => {\n  dispatch(\n    uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data'\n    })\n  );\n\n  try {\n    const response = await fetch(\n      'https://react-redux-22c17-default-rtdb.firebaseio.com/cart.json',\n      {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      }\n    )\n\n    if (!response.ok) {\n      throw new Error('Sending cart data failed')\n    }\n\n    dispatch(\n      uiActions.showNotification({\n        status: 'success',\n        title: 'Success',\n        message: 'Cart data has been sent'\n      })\n    );\n  } catch (error) {\n    uiActions.showNotification({\n      status: 'error',\n      title: 'Error',\n      message: 'Sending cart data failed'\n    })\n  }\n};\n\nexport const cartActions = slice.actions;\nexport default slice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,MAAM;AAEhC,MAAMC,KAAK,GAAGF,WAAW,CAAC;EACxBG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC;EACDC,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MAAEC;IAAQ,CAAC,EAAE;MAC5B,MAAMC,gBAAgB,GAAGF,KAAK,CAACJ,KAAK,CAACO,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MAEzE,IAAIH,gBAAgB,EAAE;QACpBA,gBAAgB,CAACL,QAAQ,EAAE;QAC3BK,gBAAgB,CAACI,KAAK,IAAIJ,gBAAgB,CAACK,KAAK;MAClD,CAAC,MAAM;QACLP,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC;UACf,GAAGP,OAAO;UACVK,KAAK,EAAEL,OAAO,CAACM,KAAK;UACpBV,QAAQ,EAAE;QACZ,CAAC,CAAC;MACJ;MAEAG,KAAK,CAACH,QAAQ,EAAE;IAClB,CAAC;IACDY,cAAcA,CAACT,KAAK,EAAE;MAAEC;IAAQ,CAAC,EAAE;MACjC,MAAMC,gBAAgB,GAAGF,KAAK,CAACJ,KAAK,CAACO,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAAC;MAEtE,IAAIC,gBAAgB,CAACL,QAAQ,GAAG,CAAC,EAAE;QACjCK,gBAAgB,CAACL,QAAQ,EAAE;QAC3BK,gBAAgB,CAACI,KAAK,IAAIJ,gBAAgB,CAACK,KAAK;MAClD,CAAC,MACCP,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACc,MAAM,CAACN,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAAC;MAE/DD,KAAK,CAACH,QAAQ,EAAE;IAElB;EACF;AACF,CAAC,CAAC;AAEF,MAAMc,YAAY,GAAIC,IAAI,IAAK,MAAOC,QAAQ,IAAK;EACjDA,QAAQ,CACNrB,SAAS,CAACsB,gBAAgB,CAAC;IACzBC,MAAM,EAAE,SAAS;IACjBC,KAAK,EAAE,YAAY;IACnBC,OAAO,EAAE;EACX,CAAC,CACH,CAAC;EAED,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iEAAiE,EACjE;MACEC,MAAM,EAAE,KAAK;MACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,IAAI;IAC3B,CACF,CAAC;IAED,IAAI,CAACM,QAAQ,CAACM,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC7C;IAEAZ,QAAQ,CACNrB,SAAS,CAACsB,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,SAAS;MAChBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;EACH,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdlC,SAAS,CAACsB,gBAAgB,CAAC;MACzBC,MAAM,EAAE,OAAO;MACfC,KAAK,EAAE,OAAO;MACdC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMU,WAAW,GAAGlC,KAAK,CAACmC,OAAO;AACxC,eAAenC,KAAK,CAACoC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}