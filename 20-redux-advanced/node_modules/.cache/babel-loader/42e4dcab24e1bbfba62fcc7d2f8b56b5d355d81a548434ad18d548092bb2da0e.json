{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst slice = createSlice({\n  name: 'cart',\n  initialState: {\n    // items: [{\n    //   title: 'Test item',\n    //   quantity: 2,\n    //   price: 12,\n    //   total: 24\n    // },\n    // {\n    //   title: 'Test item 2',\n    //   quantity: 3,\n    //   price: 12,\n    //   total: 36\n    // },\n    // {\n    //   title: 'Test item 3',\n    //   quantity: 10,\n    //   price: 12,\n    //   total: 120\n    // }],\n    items: [],\n    quantity: 0,\n    price: 0\n  },\n  reducers: {\n    addToCart(state, action) {\n      console.log('state.items', state.items);\n      const {\n        payload\n      } = action;\n      console.log(payload);\n      const existingCartItem = state.items.find(item => item.id === payload.id);\n      if (existingCartItem) {\n        console.log('existingCartItem.id', existingCartItem.id);\n        const quantity = existingCartItem.quantity + 1;\n        const newCartItem = {\n          ...existingCartItem,\n          quantity,\n          total: quantity * existingCartItem.price\n        };\n        console.log('newCartItem', newCartItem);\n        state.items = state.items.map(item => item.id === existingCartItem.id ? newCartItem : item);\n        state.price = state.price + existingCartItem.price;\n      } else {\n        const cartItem = {\n          ...payload,\n          total: payload.price,\n          quantity: 1\n        };\n        const newItems = [cartItem, ...state.items];\n        console.log('newItems', newItems);\n        state.items = newItems;\n      }\n      state.quantity = state.quantity + 1;\n      state.price = state.price + payload.price;\n    },\n    removeFromCart(state, payload) {}\n  }\n});\nexport const cartActions = slice.actions;\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","slice","name","initialState","items","quantity","price","reducers","addToCart","state","action","console","log","payload","existingCartItem","find","item","id","newCartItem","total","map","cartItem","newItems","removeFromCart","cartActions","actions","reducer"],"sources":["/Users/damian.rachwal/Documents/code/react-complete-guide/20-redux-advanced/src/store/cart.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst slice = createSlice({\n  name: 'cart',\n  initialState: {\n    // items: [{\n    //   title: 'Test item',\n    //   quantity: 2,\n    //   price: 12,\n    //   total: 24\n    // },\n    // {\n    //   title: 'Test item 2',\n    //   quantity: 3,\n    //   price: 12,\n    //   total: 36\n    // },\n    // {\n    //   title: 'Test item 3',\n    //   quantity: 10,\n    //   price: 12,\n    //   total: 120\n    // }],\n    items: [],\n    quantity: 0,\n    price: 0\n  },\n  reducers: {\n    addToCart(state, action) {\n      console.log('state.items', state.items);\n      const { payload } = action;\n      console.log(payload)\n      const existingCartItem = state.items.find(item => item.id === payload.id);\n\n      if (existingCartItem) {\n        console.log('existingCartItem.id', existingCartItem.id)\n        const quantity = existingCartItem.quantity + 1\n        const newCartItem = {\n          ...existingCartItem,\n          quantity,\n          total: quantity * existingCartItem.price,\n        }\n\n        console.log('newCartItem', newCartItem)\n        state.items = state.items.map(item => item.id === existingCartItem.id ? newCartItem : item);\n        state.price = state.price + existingCartItem.price;\n      } else {\n        const cartItem = {\n          ...payload,\n          total: payload.price,\n          quantity: 1\n        };\n\n        const newItems = [\n          cartItem,\n          ...state.items\n        ];\n        console.log('newItems', newItems)\n        state.items = newItems\n      }\n\n      state.quantity = state.quantity + 1;\n      state.price = state.price + payload.price;\n    },\n    removeFromCart(state, payload) {\n\n    }\n  }\n})\n\nexport const cartActions = slice.actions;\nexport default slice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,KAAK,GAAGD,WAAW,CAAC;EACxBE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,CAAC;IACXC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvBC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,KAAK,CAACL,KAAK,CAAC;MACvC,MAAM;QAAES;MAAQ,CAAC,GAAGH,MAAM;MAC1BC,OAAO,CAACC,GAAG,CAACC,OAAO,CAAC;MACpB,MAAMC,gBAAgB,GAAGL,KAAK,CAACL,KAAK,CAACW,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MAEzE,IAAIH,gBAAgB,EAAE;QACpBH,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEE,gBAAgB,CAACG,EAAE,CAAC;QACvD,MAAMZ,QAAQ,GAAGS,gBAAgB,CAACT,QAAQ,GAAG,CAAC;QAC9C,MAAMa,WAAW,GAAG;UAClB,GAAGJ,gBAAgB;UACnBT,QAAQ;UACRc,KAAK,EAAEd,QAAQ,GAAGS,gBAAgB,CAACR;QACrC,CAAC;QAEDK,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEM,WAAW,CAAC;QACvCT,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACgB,GAAG,CAACJ,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKH,gBAAgB,CAACG,EAAE,GAAGC,WAAW,GAAGF,IAAI,CAAC;QAC3FP,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,GAAGQ,gBAAgB,CAACR,KAAK;MACpD,CAAC,MAAM;QACL,MAAMe,QAAQ,GAAG;UACf,GAAGR,OAAO;UACVM,KAAK,EAAEN,OAAO,CAACP,KAAK;UACpBD,QAAQ,EAAE;QACZ,CAAC;QAED,MAAMiB,QAAQ,GAAG,CACfD,QAAQ,EACR,GAAGZ,KAAK,CAACL,KAAK,CACf;QACDO,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEU,QAAQ,CAAC;QACjCb,KAAK,CAACL,KAAK,GAAGkB,QAAQ;MACxB;MAEAb,KAAK,CAACJ,QAAQ,GAAGI,KAAK,CAACJ,QAAQ,GAAG,CAAC;MACnCI,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,GAAGO,OAAO,CAACP,KAAK;IAC3C,CAAC;IACDiB,cAAcA,CAACd,KAAK,EAAEI,OAAO,EAAE,CAE/B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMW,WAAW,GAAGvB,KAAK,CAACwB,OAAO;AACxC,eAAexB,KAAK,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}