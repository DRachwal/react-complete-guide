{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst slice = createSlice({\n  name: 'cart',\n  initialState: {\n    // items: [{\n    //   title: 'Test item',\n    //   quantity: 2,\n    //   price: 12,\n    //   total: 24\n    // },\n    // {\n    //   title: 'Test item 2',\n    //   quantity: 3,\n    //   price: 12,\n    //   total: 36\n    // },\n    // {\n    //   title: 'Test item 3',\n    //   quantity: 10,\n    //   price: 12,\n    //   total: 120\n    // }],\n    items: [],\n    cartQuantity: 0,\n    cartPrice: 0\n  },\n  reducers: {\n    addToCart(state, action) {\n      console.log('state.items', state.items);\n      const {\n        payload\n      } = action;\n      console.log(payload);\n      const existingCartItem = state.items.find(item => item.id === payload.id);\n      console.log('existingCartItem', existingCartItem);\n      if (existingCartItem) {\n        // update existing item\n        const quantity = existingCartItem.quantity + 1;\n        const newCartItem = {\n          ...existingCartItem,\n          quantity,\n          total: quantity * existingCartItem.price\n        };\n        state.items.map(item => item.id === existingCartItem.id ? newCartItem : item);\n        state.cartPrice = state.cartPrice + existingCartItem.price;\n      } else {\n        const cartItem = {\n          ...payload,\n          total: payload.price,\n          quantity: 1\n        };\n        const newItems = [cartItem, ...state.items];\n        console.log('newItems', newItems);\n        state.items = newItems;\n      }\n      state.cartQuantity = state.cartQuantity + 1;\n      state.cartPrice = state.cartPrice + payload.price;\n    },\n    removeFromCart(state, payload) {}\n  }\n});\nexport const cartActions = slice.actions;\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","slice","name","initialState","items","cartQuantity","cartPrice","reducers","addToCart","state","action","console","log","payload","existingCartItem","find","item","id","quantity","newCartItem","total","price","map","cartItem","newItems","removeFromCart","cartActions","actions","reducer"],"sources":["/Users/damian.rachwal/Documents/code/react-complete-guide/20-redux-advanced/src/store/cart.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst slice = createSlice({\n  name: 'cart',\n  initialState: {\n    // items: [{\n    //   title: 'Test item',\n    //   quantity: 2,\n    //   price: 12,\n    //   total: 24\n    // },\n    // {\n    //   title: 'Test item 2',\n    //   quantity: 3,\n    //   price: 12,\n    //   total: 36\n    // },\n    // {\n    //   title: 'Test item 3',\n    //   quantity: 10,\n    //   price: 12,\n    //   total: 120\n    // }],\n    items: [],\n    cartQuantity: 0,\n    cartPrice: 0\n  },\n  reducers: {\n    addToCart(state, action) {\n      console.log('state.items', state.items);\n      const { payload } = action;\n      console.log(payload)\n      const existingCartItem = state.items.find(item => item.id === payload.id);\n      console.log('existingCartItem', existingCartItem)\n\n      if (existingCartItem) {\n        // update existing item\n        const quantity = existingCartItem.quantity + 1\n        const newCartItem = {\n          ...existingCartItem,\n          quantity,\n          total: quantity * existingCartItem.price,\n        }\n\n        state.items.map(item => item.id === existingCartItem.id ? newCartItem : item);\n        state.cartPrice = state.cartPrice + existingCartItem.price;\n      } else {\n        const cartItem = {\n          ...payload,\n          total: payload.price,\n          quantity: 1\n        };\n\n        const newItems = [\n          cartItem,\n          ...state.items\n        ];\n        console.log('newItems', newItems)\n        state.items = newItems\n      }\n\n      state.cartQuantity = state.cartQuantity + 1;\n      state.cartPrice = state.cartPrice + payload.price;\n    },\n    removeFromCart(state, payload) {\n\n    }\n  }\n})\n\nexport const cartActions = slice.actions;\nexport default slice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,KAAK,GAAGD,WAAW,CAAC;EACxBE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,KAAK,EAAE,EAAE;IACTC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvBC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,KAAK,CAACL,KAAK,CAAC;MACvC,MAAM;QAAES;MAAQ,CAAC,GAAGH,MAAM;MAC1BC,OAAO,CAACC,GAAG,CAACC,OAAO,CAAC;MACpB,MAAMC,gBAAgB,GAAGL,KAAK,CAACL,KAAK,CAACW,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACzEN,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEE,gBAAgB,CAAC;MAEjD,IAAIA,gBAAgB,EAAE;QACpB;QACA,MAAMI,QAAQ,GAAGJ,gBAAgB,CAACI,QAAQ,GAAG,CAAC;QAC9C,MAAMC,WAAW,GAAG;UAClB,GAAGL,gBAAgB;UACnBI,QAAQ;UACRE,KAAK,EAAEF,QAAQ,GAAGJ,gBAAgB,CAACO;QACrC,CAAC;QAEDZ,KAAK,CAACL,KAAK,CAACkB,GAAG,CAACN,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKH,gBAAgB,CAACG,EAAE,GAAGE,WAAW,GAAGH,IAAI,CAAC;QAC7EP,KAAK,CAACH,SAAS,GAAGG,KAAK,CAACH,SAAS,GAAGQ,gBAAgB,CAACO,KAAK;MAC5D,CAAC,MAAM;QACL,MAAME,QAAQ,GAAG;UACf,GAAGV,OAAO;UACVO,KAAK,EAAEP,OAAO,CAACQ,KAAK;UACpBH,QAAQ,EAAE;QACZ,CAAC;QAED,MAAMM,QAAQ,GAAG,CACfD,QAAQ,EACR,GAAGd,KAAK,CAACL,KAAK,CACf;QACDO,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEY,QAAQ,CAAC;QACjCf,KAAK,CAACL,KAAK,GAAGoB,QAAQ;MACxB;MAEAf,KAAK,CAACJ,YAAY,GAAGI,KAAK,CAACJ,YAAY,GAAG,CAAC;MAC3CI,KAAK,CAACH,SAAS,GAAGG,KAAK,CAACH,SAAS,GAAGO,OAAO,CAACQ,KAAK;IACnD,CAAC;IACDI,cAAcA,CAAChB,KAAK,EAAEI,OAAO,EAAE,CAE/B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMa,WAAW,GAAGzB,KAAK,CAAC0B,OAAO;AACxC,eAAe1B,KAAK,CAAC2B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}