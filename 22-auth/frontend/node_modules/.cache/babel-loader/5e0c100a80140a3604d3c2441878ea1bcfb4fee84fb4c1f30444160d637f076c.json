{"ast":null,"code":"var _jsxFileName = \"/Users/damian.rachwal/Documents/code/react-complete-guide/22-auth/frontend/src/components/AuthForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const [params] = useSearchParams();\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [responseError, setResponseError] = useState();\n  const isLogin = params.get(\"isLogin\");\n  const authLink = isLogin ? \"\" : \"?isLogin=1\";\n  const inputHandler = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const submitHandler = async e => {\n    e.preventDefault();\n    console.log(\"submitHandler inputs\", inputs);\n    const url = `http://localhost:8080/${isLogin ? \"login\" : \"signup\"}`;\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: \"test@gmail.com\",\n        password: \"123456!@#$%^\"\n      })\n    });\n    console.log(\"response\", response);\n    const data = await response.json();\n    if (!response.ok) {\n      setResponseError(response.errors);\n      return;\n    }\n    console.log(\"data\", data);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isLogin ? \"Log in\" : \"Create a new user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), responseError && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.values(responseError).map(error => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: error\n        }, error, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"email\",\n          name: \"email\",\n          required: true,\n          value: inputs.email,\n          onChange: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\",\n          name: \"password\",\n          required: true,\n          value: inputs.password,\n          onChange: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: authLink,\n          type: \"button\",\n          children: isLogin ? \"No account? Register\" : \"Already have an account? Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(AuthForm, \"LsrGVcaXTSfYanYdJXNleLi3HIs=\", false, function () {\n  return [useSearchParams];\n});\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","Link","useSearchParams","classes","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthForm","_s","params","inputs","setInputs","email","password","responseError","setResponseError","isLogin","get","authLink","inputHandler","e","name","value","target","prevState","submitHandler","preventDefault","console","log","url","response","fetch","method","headers","body","JSON","stringify","data","json","ok","errors","children","className","form","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","Object","values","map","error","htmlFor","id","type","required","onChange","actions","to","_c","$RefreshReg$"],"sources":["/Users/damian.rachwal/Documents/code/react-complete-guide/22-auth/frontend/src/components/AuthForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const [params] = useSearchParams();\n  const [inputs, setInputs] = useState({ email: \"\", password: \"\" });\n  const [responseError, setResponseError] = useState();\n\n  const isLogin = params.get(\"isLogin\");\n  const authLink = isLogin ? \"\" : \"?isLogin=1\";\n\n  const inputHandler = (e) => {\n    const { name, value } = e.target;\n\n    setInputs((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    console.log(\"submitHandler inputs\", inputs);\n    const url = `http://localhost:8080/${isLogin ? \"login\" : \"signup\"}`;\n\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: \"test@gmail.com\",\n        password: \"123456!@#$%^\",\n      }),\n    });\n\n    console.log(\"response\", response);\n    const data = await response.json();\n\n    if (!response.ok) {\n      setResponseError(response.errors);\n      return;\n    }\n\n    console.log(\"data\", data);\n  };\n\n  return (\n    <>\n      <form className={classes.form} onSubmit={submitHandler}>\n        <h1>{isLogin ? \"Log in\" : \"Create a new user\"}</h1>\n        {responseError && (\n          <ul>\n            {Object.values(responseError).map((error) => (\n              <li key={error}>{error}</li>\n            ))}\n          </ul>\n        )}\n        <p>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            required\n            value={inputs.email}\n            onChange={inputHandler}\n          />\n        </p>\n        <p>\n          <label htmlFor=\"image\">Password</label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            required\n            value={inputs.password}\n            onChange={inputHandler}\n          />\n        </p>\n        <div className={classes.actions}>\n          <Link to={authLink} type=\"button\">\n            {isLogin\n              ? \"No account? Register\"\n              : \"Already have an account? Login\"}\n          </Link>\n          <button>{isLogin ? \"Login\" : \"Register\"}</button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}